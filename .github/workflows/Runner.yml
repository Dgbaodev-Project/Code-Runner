name: Runner

on:
  workflow_dispatch:
    inputs:
      OS:
        description: "Operating System"
        type: choice
        options:
          - ubuntu-22.04
          - ubuntu-latest
        required: true
      script:
        description: "Script URL"
        required: true
      init:
        description: "Init Script URL"
        required: true
      config:
          description: "Config URL"
          required: true
      callback:
        description: "Callback URL"
        required: true
      ID:
        description: "ID JOB"
        default: "RANDOM"
        required: false

jobs:
  run-script:
    runs-on: ${{ github.event.inputs.OS }}
    name: "Runner Script (${{ github.event.inputs.OS }}; ${{ github.event.inputs.ID }})"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set ID
        id: set_id
        run: |
          if [ "${{ github.event.inputs.ID }}" == "RANDOM" ]; then
            RANDOM_ID=$(uuidgen)
            echo "ID << RANDOM_ID: $RANDOM_ID"
            echo "JID=$RANDOM_ID" >> $GITHUB_OUTPUT
          else
            echo "ID << INPUT_ID: ${{ github.event.inputs.ID }}"
            echo "JID=${{ github.event.inputs.ID }}" >> $GITHUB_OUTPUT
          fi

      - name: Init
        id: init
        shell: bash
        continue-on-error: true
        run: |
          sudo mkdir -m 775 -p /runner /input /env /local /output
          sudo chown root:everybody /runner /input /env /local /output
          wget -O /input/init.bash ${{ github.event.inputs.init }}
          wget -O /input/config.dgb ${{ github.event.inputs.config }}
          wget -O /input/callback.dgb ${{ github.event.inputs.callback }}
          cd /runner && bash /input/init.bash && cd -
          
      - name: Run tests
        run: |
          echo "Operating System: ${{ github.event.inputs.OS }}"
          echo "Full info: $(uname -a)"
          echo "Repo Path: $GITHUB_WORKSPACE"
          echo "File: " && ls -lah $GITHUB_WORKSPACE
          echo "Job ID: ${{ steps.set_id.outputs.JID }}"
          echo "Path: /runner"
          echo "File: " && ls -lah /runner
          echo "Path: /input"
          echo "File: " && ls -lah /input
          echo "Path: /env"
          echo "File: " && ls -lah /env
          echo "Path: /local"
          echo "File: " && ls -lah /local
          echo "Path: /output"
          echo "File: " && ls -lah /output
